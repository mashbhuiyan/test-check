name: CI/CD Deployment

on:
  push:
    branches: 
      - staging  # Trigger the workflow when pushing to the staging branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up Ruby and install dependencies
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.0
          
      - name: Install Dependencies
        run: |
          gem install bundler
          bundle install

      # Step 3: Ensure known_hosts file exists and remove old SSH key from known_hosts
      - name: Remove old SSH key from known_hosts
        run: |
          mkdir -p ~/.ssh  # Ensure the .ssh directory exists
          touch ~/.ssh/known_hosts  # Create the known_hosts file if it doesn't exist
          ssh-keygen -R ${{ secrets.EC2_HOST }}  # Remove old SSH key

      # Step 4: Set up SSH keys for deployment to EC2
      - name: Set up SSH keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # Step 5: Install NVM and Node.js v17.9.1
      - name: Install NVM and Node.js v17.9.1
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # Source nvm
          nvm install 17.9.1  # Install Node.js v17.9.1
          nvm use 17.9.1  # Set the default version
          node -v  # Check the installed version to verify
          nvm alias default 17.9.1  # Set as the default Node.js version

      # Step 6: Deploy using Capistrano
      - name: Deploy to EC2
        run: |
          bundle exec cap staging deploy
